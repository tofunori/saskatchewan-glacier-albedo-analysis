#!/usr/bin/env python3
"""
SCRIPT PRINCIPAL - Analyse des tendances d'alb√©do du glacier Saskatchewan
========================================================================

Script interactif simple avec menu pour choisir les analyses √† effectuer.

POUR UTILISER DANS VS CODE:
1. Ouvrez ce fichier dans VS Code
2. Ex√©cutez le script avec Ctrl+F5 ou clic droit "Run Python File in Terminal"
3. Choisissez une option dans le menu qui appara√Æt
4. Consultez les r√©sultats dans le dossier results/

MENU:
1 = Analyse compl√®te (tout)
2 = Tendances seulement  
3 = Visualisations seulement
4 = Pixels/QA seulement
5 = Graphiques quotidiens seulement (NOUVEAU: inclut alb√©do quotidien!)
6 = Quitter
"""

import os
import sys
from datetime import datetime
from pathlib import Path

# Ajouter le r√©pertoire src au path
script_dir = Path(__file__).parent.absolute()
project_dir = script_dir.parent
src_dir = project_dir / 'src'
sys.path.insert(0, str(src_dir))

print(f"üìÇ R√©pertoire de travail actuel: {Path.cwd()}")
print(f"üìÅ R√©pertoire du projet: {project_dir}")

# Import de la configuration et des fonctions d'analyse
try:
    from saskatchewan_albedo.config import print_config_summary
    from saskatchewan_albedo.scripts.analysis_functions import (check_config, run_complete_analysis, run_trends_only, 
                                                               run_visualizations_only, run_pixels_only, run_daily_only)
    print("‚úÖ Modules import√©s avec succ√®s")
except ImportError as e:
    print(f"‚ùå Erreur d'import: {e}")
    sys.exit(1)

def show_menu():
    """Affiche le menu d'options avec choix de datasets"""
    print("\n" + "="*70)
    print("üöÄ MENU D'ANALYSE - SASKATCHEWAN GLACIER ALBEDO")
    print("="*70)
    print()
    print("üìä ANALYSES PAR DATASET:")
    print("1Ô∏è‚É£  Analyse MCD43A3 (Alb√©do g√©n√©ral MODIS)")
    print("2Ô∏è‚É£  Analyse MOD10A1 (Alb√©do de neige Terra)")
    print()
    print("üîÑ ANALYSES COMPARATIVES:")
    print("3Ô∏è‚É£  Comparaison MCD43A3 vs MOD10A1")
    print("4Ô∏è‚É£  Analyse de corr√©lation entre produits")
    print()
    print("üõ†Ô∏è  OUTILS AVANC√âS:")
    print("5Ô∏è‚É£  Analyse personnalis√©e (choix dataset)")
    print("6Ô∏è‚É£  Visualisations comparatives")
    print("7Ô∏è‚É£  Export des r√©sultats")
    print()
    print("8Ô∏è‚É£  Quitter")
    print()
    print("-" * 70)

def get_choice():
    """Obtient le choix de l'utilisateur avec validation √©tendue"""
    print("\n" + "="*70)
    print("S√âLECTION DE L'ANALYSE")
    print("="*70)
    print()
    print("Tapez le num√©ro de votre choix puis appuyez sur Entr√©e:")
    print("1 = MCD43A3 (Alb√©do g√©n√©ral)")
    print("2 = MOD10A1 (Alb√©do neige)")
    print("3 = Comparaison compl√®te")
    print("4 = Corr√©lations")
    print("5 = Analyse personnalis√©e")
    print("6 = Visualisations")
    print("7 = Exports")
    print("8 = Quitter")
    print()
    
    while True:
        try:
            choice = input("‚û§ Votre choix (1-8): ").strip()
            if choice in ['1', '2', '3', '4', '5', '6', '7', '8']:
                return int(choice)
            else:
                print(f"‚ùå '{choice}' n'est pas valide. Tapez un chiffre de 1 √† 8.")
        except KeyboardInterrupt:
            print("\n\nüëã Interruption. Au revoir!")
            return 8
        except:
            print("‚ùå Erreur de saisie. Tapez un chiffre de 1 √† 8.")

def get_dataset_choice():
    """Permet √† l'utilisateur de choisir un dataset sp√©cifique"""
    print("\n" + "="*50)
    print("CHOIX DU DATASET")
    print("="*50)
    print()
    print("1Ô∏è‚É£  MCD43A3 - Alb√©do g√©n√©ral (MODIS Combined)")
    print("2Ô∏è‚É£  MOD10A1 - Alb√©do de neige (Terra Snow Cover)")
    print()
    
    while True:
        try:
            choice = input("‚û§ Choisissez le dataset (1-2): ").strip()
            if choice == '1':
                return 'MCD43A3'
            elif choice == '2':
                return 'MOD10A1'
            else:
                print(f"‚ùå '{choice}' n'est pas valide. Tapez 1 ou 2.")
        except KeyboardInterrupt:
            print("\n\nüëã Interruption.")
            return None
        except:
            print("‚ùå Erreur de saisie. Tapez 1 ou 2.")

def get_analysis_type():
    """Permet √† l'utilisateur de choisir le type d'analyse"""
    print("\n" + "="*50)
    print("TYPE D'ANALYSE")
    print("="*50)
    print()
    print("1Ô∏è‚É£  Analyse compl√®te")
    print("2Ô∏è‚É£  Tendances seulement")
    print("3Ô∏è‚É£  Visualisations seulement")
    print("4Ô∏è‚É£  Pixels/QA seulement")
    print("5Ô∏è‚É£  Graphiques quotidiens")
    print()
    
    while True:
        try:
            choice = input("‚û§ Type d'analyse (1-5): ").strip()
            if choice in ['1', '2', '3', '4', '5']:
                return int(choice)
            else:
                print(f"‚ùå '{choice}' n'est pas valide. Tapez un chiffre de 1 √† 5.")
        except KeyboardInterrupt:
            print("\n\nüëã Interruption.")
            return None
        except:
            print("‚ùå Erreur de saisie. Tapez un chiffre de 1 √† 5.")

def main():
    """Fonction principale avec support multi-datasets"""
    print("\n" + "="*70)
    print("üöÄ SASKATCHEWAN GLACIER ALBEDO TREND ANALYSIS")
    print("="*70)
    print("üìÖ Session lanc√©e le:", datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
    
    # Afficher la configuration g√©n√©rale et v√©rifier les datasets
    print_config_summary()
    
    # Importer les nouvelles fonctions
    try:
        from saskatchewan_albedo.scripts.analysis_functions import (
            run_dataset_analysis, run_comparison_analysis, run_correlation_analysis,
            run_custom_analysis, run_comparative_visualizations, run_export_all,
            check_datasets_availability
        )
    except ImportError as e:
        print(f"‚ùå Erreur d'import des nouvelles fonctions: {e}")
        print("üìù Utilisation du mode de compatibilit√©...")
        from saskatchewan_albedo.scripts.analysis_functions import (
            run_complete_analysis, run_trends_only, run_visualizations_only,
            run_pixels_only, run_daily_only
        )
        # Mode de compatibilit√© avec l'ancien menu
        _run_legacy_mode()
        return
    
    # V√©rifier la disponibilit√© des datasets
    if not check_datasets_availability():
        print("\n‚ùå Aucun dataset valide trouv√©.")
        return
    
    while True:
        show_menu()
        choice = get_choice()
        
        try:
            if choice == 1:
                # Analyse MCD43A3
                print("\nüîç Analyse du dataset MCD43A3 (Alb√©do g√©n√©ral)...")
                run_dataset_analysis('MCD43A3')
                
            elif choice == 2:
                # Analyse MOD10A1
                print("\n‚ùÑÔ∏è Analyse du dataset MOD10A1 (Alb√©do de neige)...")
                run_dataset_analysis('MOD10A1')
                
            elif choice == 3:
                # Comparaison compl√®te
                print("\nüîÑ Comparaison compl√®te MCD43A3 vs MOD10A1...")
                run_comparison_analysis()
                
            elif choice == 4:
                # Analyse de corr√©lation
                print("\nüìä Analyse de corr√©lation entre produits...")
                run_correlation_analysis()
                
            elif choice == 5:
                # Analyse personnalis√©e
                print("\n‚öôÔ∏è Analyse personnalis√©e...")
                dataset = get_dataset_choice()
                if dataset:
                    analysis_type = get_analysis_type()
                    if analysis_type:
                        run_custom_analysis(dataset, analysis_type)
                
            elif choice == 6:
                # Visualisations comparatives
                print("\nüìà G√©n√©ration des visualisations comparatives...")
                run_comparative_visualizations()
                
            elif choice == 7:
                # Export des r√©sultats
                print("\nüíæ Export de tous les r√©sultats...")
                run_export_all()
                
            elif choice == 8:
                print("\nüëã Au revoir!")
                break
            
        except Exception as e:
            print(f"\n‚ùå Erreur lors de l'ex√©cution: {e}")
            print("üìù Consultez les logs pour plus de d√©tails.")
        
        print("\n" + "="*60)
        try:
            cont = input("‚û§ Continuer avec une autre analyse? (o/n): ").strip().lower()
            if cont not in ['o', 'oui', 'y', 'yes']:
                print("\nüëã Au revoir!")
                break
        except KeyboardInterrupt:
            print("\n\nüëã Interruption. Au revoir!")
            break
        except:
            break

def _run_legacy_mode():
    """Mode de compatibilit√© avec l'ancien menu"""
    print("\n‚ö†Ô∏è Mode de compatibilit√© activ√© - Menu simplifi√©")
    
    from saskatchewan_albedo.scripts.analysis_functions import (
        run_complete_analysis, run_trends_only, run_visualizations_only,
        run_pixels_only, run_daily_only
    )
    
    while True:
        print("\n" + "="*60)
        print("üöÄ MENU SIMPLIFI√â")
        print("="*60)
        print("1Ô∏è‚É£  Analyse compl√®te")
        print("2Ô∏è‚É£  Tendances seulement")
        print("3Ô∏è‚É£  Visualisations")
        print("4Ô∏è‚É£  Pixels/QA")
        print("5Ô∏è‚É£  Graphiques quotidiens")
        print("6Ô∏è‚É£  Quitter")
        
        try:
            choice = input("\n‚û§ Votre choix (1-6): ").strip()
            
            if choice == '1':
                run_complete_analysis()
            elif choice == '2':
                run_trends_only()
            elif choice == '3':
                run_visualizations_only()
            elif choice == '4':
                run_pixels_only()
            elif choice == '5':
                run_daily_only()
            elif choice == '6':
                break
            else:
                print("‚ùå Choix invalide")
                
        except KeyboardInterrupt:
            print("\nüëã Au revoir!")
            break

if __name__ == "__main__":
    main()